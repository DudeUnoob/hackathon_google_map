<!doctype html>
<html>
  <head>
    <title>Add and Remove Markers</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <style>
      #map {
        height: 400px;
        width: 100%;
      }
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <body>
    <h3>My Google Maps Demo</h3>
    <div id="map"></div>
    <button onclick="createNewMarker()">Create a New Marker</button>
    <button onclick="removeLastMarker()">Remove Last Marker</button>
    <button onclick="clearAllMarkers()">Clear All Markers</button>

    <script>
      let map;
      let infoWindow;
      let markers = [];

      async function initMap() {
        const { Map, InfoWindow } = await google.maps.importLibrary("maps");
        
        map = new Map(document.getElementById("map"), {
          center: { lat: 37.39094933041195, lng: -122.02503913145092 },
          zoom: 14,
          mapId: "4504f8b37365c3d0",
        });
        
        infoWindow = new InfoWindow();
        
        // Fetch markers from the API and render them
        fetchAndRenderMarkers();
        fetchAndRenderMarkers()
      }

      async function fetchAndRenderMarkers() {
        try {
          const response = await fetch('/api/getMarkers', {
            method: "GET",
            headers: {
              'Content-Type': 'application/json'
            }
          });
          const data = await response.json();
          console.log(data)
          renderMarkers(data);
        } catch (error) {
          console.error('Error fetching markers:', error);
        }
      }

      async function renderMarkers(markersData) {
        const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

        markersData.data.forEach(markerData => {
          const marker = new AdvancedMarkerElement({
            map,
            position: { lat: markerData.lat, lng: markerData.lng },
            gmpDraggable: true,
            title: `Marker by ${markerData.username}`,
          });

          markers.push(marker);

          marker.addListener("click", () => {
            infoWindow.close();
            infoWindow.setContent(`<div>Created by: ${markerData.username}<br>Position: ${markerData.lat}, ${markerData.lng}</div>`);
            infoWindow.open(marker.map, marker);
          });

          marker.addListener("dragend", (event) => {
            const position = marker.position;
            console.log(`Marker moved to: ${position.lat}, ${position.lng}`);
            updateMarkerPosition(marker, markerData.username);
          });
        });
      }

      async function createNewMarker() {
        if (!map) {
          console.error("Map not initialized");
          return;
        }

        const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

        const username = "test"; // You might want to get this from the current user's session

        const newMarker = new AdvancedMarkerElement({
          map,
          position: { lat: 37.7870889413597, lng: -122.42503913145092 },
          gmpDraggable: true,
          title: `Marker by ${username}`,
        });

        markers.push(newMarker);

        newMarker.addListener("click", () => {
          infoWindow.close();
          infoWindow.setContent(`<div>Created by: ${username}<br>Position: ${newMarker.position.lat}, ${newMarker.position.lng}</div>`);
          infoWindow.open(newMarker.map, newMarker);
        });

        newMarker.addListener("dragend", (event) => {
          const position = newMarker.position;
          console.log(`Marker moved to: ${position.lat}, ${position.lng}`);
          updateMarkerPosition(newMarker, username);
        });

        updateMarkerPosition(newMarker, username);

        map.panTo(newMarker.position);
      }

      function updateMarkerPosition(marker, username) {
        const position = marker.position;

        fetch("/api/updateMarkers", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            markers: [{lat: position.lat, lng: position.lng, username: username}]
          })
        })
        .then(res => res.json())
        .then(data => console.log(data))
        .catch(error => console.error('Error:', error));

        infoWindow.close();
        infoWindow.setContent(`<div>Created by: ${username}<br>Position: ${position.lat}, ${position.lng}</div>`);
        infoWindow.open(marker.map, marker);
      }

      function removeLastMarker() {
        if (markers.length > 0) {
          const lastMarker = markers.pop();
          lastMarker.map = null; // This removes the marker from the map
          console.log("Marker removed. Remaining markers:", markers.length);
        } else {
          console.log("No markers to remove");
        }
      }

      function clearAllMarkers(){
        markers.forEach(marker => marker.map = null);
        markers = [];
        console.log("All markers have been cleared");
      }

      initMap();
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD6XvjRnSbCvqsI9gSV0B9BrfIh3vCjRBU&callback=initMap"></script>
  </body>
</html>